# Parallels Tools for Linux
#
# Copyright (c) 1999-2015 Parallels International GmbH.
# All rights reserved.
# http://www.parallels.com

first: compile

PRL_ETH ?= prl_eth/pvmnet
PRL_TG ?= prl_tg/Toolgate/Guest/Linux/prl_tg
PRL_FS ?= prl_fs/SharedFolders/Guest/Linux/prl_fs
PRL_FREEZE ?= prl_fs_freeze/Snapshot/Guest/Linux/prl_freeze
PRL_VID ?= prl_vid/Video/Guest/Linux/kmod
PRL_NOTIFIER ?= prl_notifier/Installation/lnx/prl_notifier

export KVER := $(or ${KVER},$(if ${KERNEL_DIR},$(shell basename `readlink -f ${KERNEL_DIR}`),$(shell uname -r)))
export KERNEL_DIR := $(or ${KERNEL_DIR},/lib/modules/${KVER}/build)
$(info Kernel: ${KVER}, dir: ${KERNEL_DIR})

# Get compiler version used for kernel build.
KERNEL_CC_VER := $(shell cat /proc/version | grep -o -e 'cc \+version \+[0-9,\.]\+' | grep -o -e '[0-9,\.]\+')
ifneq ($(findstring $(KERNEL_CC_VER), $(shell $(CC) --version | grep -e '^g*cc')),$(KERNEL_CC_VER))
  $(info Searching for compiler $(KERNEL_CC_VER) due to version mismatch.)
  $(foreach f,$(wildcard /usr/bin/gcc-[0-9]*),$(if $(filter $(KERNEL_CC_VER),$(shell $(f) --version | grep -e '^g*cc')),$(eval CC := $(f))))
endif
$(info Will use compiler CC="$(CC)".)
$(info Compiler version "$(shell $(CC) --version | grep '^g*cc')")

PRL_TG_SYMVERS := $(shell readlink -f ${PRL_TG})/Module.symvers

compile:
	cd ${PRL_TG} && make CC=$(CC)
	cp -f ${PRL_TG}/*.symvers ${PRL_FS} ||:
	cd ${PRL_FS} && make CC=$(CC) KBUILD_EXTRA_SYMBOLS=${PRL_TG_SYMVERS}
ifeq ($(shell uname -m),aarch64)
	cd ${PRL_NOTIFIER} && make CC=${CC}
else
	cd ${PRL_ETH} && make CC=$(CC)
	cp -f ${PRL_TG}/*.symvers ${PRL_VID} ||:
	cd ${PRL_VID} && make CC=$(CC) KBUILD_EXTRA_SYMBOLS=${PRL_TG_SYMVERS}
endif
ifndef PRL_FREEZE_SKIP
	cd ${PRL_FREEZE} && make CC=$(CC)
endif

clean:
	cd ${PRL_TG} && make clean
	cd ${PRL_FS} && make clean
ifeq ($(shell uname -m),aarch64)
	cd ${PRL_NOTIFIER} && make clean
else
	cd ${PRL_ETH} && make clean
	cd ${PRL_VID} && make clean
endif
ifndef PRL_FREEZE_SKIP
	cd ${PRL_FREEZE} && make clean
endif
